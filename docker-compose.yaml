version: "3"

services:
  app:
    build:
      context: ./node
      dockerfile: Dockerfile
    container_name: app
    entrypoint: sh -c "npm install && node index.js"
    tty: true
    environment:
      DB_HOST: "db"
      DB_USER: "root"
      DB_PASS: "root123"
      DB_DATABASE: "desafio2-docker-db"
    networks:
      - node-network
    volumes:
      - ./node:/app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"

  db:
    image: mysql:5.7
    container_name: db
    command: --innodb-use-native-aio=0
    restart: always
    tty: true
    environment:
      - MYSQL_DATABASE=desafio2-docker-db
      - MYSQL_ROOT_PASSWORD=root123
    networks:
      - node-network
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/database:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h localhost -u root -p$${MYSQL_ROOT_PASSWORD}",
        ]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 0s

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    command: /bin/sh -c "exec nginx -g 'daemon off;'"
    ports:
      - "8080:80"
    networks:
      - node-network
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - app

networks:
  node-network:
    driver: bridge
